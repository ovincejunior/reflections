How did viewing a diff between two versions of a file help you see the bug that
was introduced?

because files with long codes might be dicfficult to find the difference. diff will point out the specific differences among files. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Because some ideas already developped are easily accessible when we want to use them back. or having other ideas, we can compare all the ideas tested or implemented.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros: you know exactle whta changes in your version
          you have the control over, knowing when to change 
    cons: you might forget when to commit 
          you might not have the right sense on how and when to commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git was designed to help coders who works in multiple files at the same time to handle that. OVs were not focused on that. 

How can you use the commands git log and git diff to view the history of files?

    git log to see the commits 
    git diff to see the difference between commits

How might using version control make you more confident to make changes that
could break something?

    knowing that i can get back to different versions of my work, using git increase confidence to make change and test different ideas. 

Now that you have your workspace set up, what do you want to try using Git for?

    want to take the intro to ML class
